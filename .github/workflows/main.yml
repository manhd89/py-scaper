name: Py Scraper 
on:
  push:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
jobs:
  scraper:
    name: Py Scraper 
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@main
        with:
          fetch-depth: 0
    
      - name: Install Cloudflared
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -o cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb
    
      - name: Authenticate Cloudflared
        run: |
          cloudflared login
          cloudflared tunnel create my-tunnel
    
      - name: Create Tunnel Configuration File
        run: |
          mkdir -p ~/.cloudflared
          echo "tunnel: $(cloudflared tunnel list | grep my-tunnel | awk '{print $1}')" > ~/.cloudflared/config.yml
          echo "credentials-file: /home/runner/.cloudflared/$(ls /home/runner/.cloudflared | grep .json)" >> ~/.cloudflared/config.yml
          echo "ingress:" >> ~/.cloudflared/config.yml
          echo "  - hostname: my-hostname.example.com" >> ~/.cloudflared/config.yml
          echo "    service: http://localhost:3000" >> ~/.cloudflared/config.yml
          echo "  - service: http_status:404" >> ~/.cloudflared/config.yml
    
      - name: Start Cloudflared Tunnel
        run: |
          cloudflared tunnel run my-tunnel

      - name: Install Python
        uses: actions/setup-python@main
        with:
          python-version: 3.11

      - name: Cache Python packages
        uses: actions/cache@main
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: pip install -r requirements.txt
          
      - name: Scraper 
        run: python main.py
        
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 1
